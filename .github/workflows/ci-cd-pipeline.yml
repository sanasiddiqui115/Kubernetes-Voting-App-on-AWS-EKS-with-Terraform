name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      #debug
      - name: Debug repo contents
        run: |
          pwd
          ls -R

      # Checkout source
      - name: Checkout repo
        uses: actions/checkout@v3

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build & Push Docker Images
      - name: Build & push Vote image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/vote:latest -f vote/Dockerfile vote/
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/vote:latest

      - name: Build & push Result image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/result:latest -f result/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/result:latest

      - name: Build & push Worker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/worker:latest -f worker/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/worker:latest

      # Configure AWS creds
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Install kubectl
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      # Install eksctl
      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      # Update kubeconfig
      - name: Update kubeconfig
        run: eksctl utils write-kubeconfig --cluster ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      # Deploy manifests
      - name: Apply Kubernetes manifests
        run: kubectl apply -f k8s/
